package se.lexicon.order.component.entity;

import com.gigaspaces.annotation.pojo.SpaceClass;
import com.gigaspaces.annotation.pojo.SpaceId;
import com.gigaspaces.annotation.pojo.SpaceRouting;
import com.so4it.annotation.Allowed;
import com.so4it.component.entity.IdEntity;
import se.lexicon.order.component.domain.Money;
import se.lexicon.order.component.domain.Side;

import java.math.BigDecimal;
import java.time.Instant;

@SpaceClass
public class OrderEntity extends IdEntity<String> {

    @Allowed(value = "Auto generated by GS",types = {Allowed.Type.NULLABLE})
    private String id;
    private String ssn;
    private BigDecimal amount;

    // Original
    private String instrument;
    private Money minMaxValue;
    private Instant insertionTimestamp;
    private Side side;

    private Integer noOfItemsToMatch;
    private Boolean allItemsMatched;

    public OrderEntity(){

    }

    @Override
    @SpaceId(autoGenerate = true)
    public String getId() {
        return id;
    }

    private void setId(String id){
        this.id=id;
    }

    public String getSsn(){
        return ssn;
    }

    private void setSsn(String ssn){
        this.ssn=ssn;
    }
    public BigDecimal getAmount(){
        return amount;
    }

    private void setAmount(BigDecimal amount){
        this.amount=amount;
    }

    @SpaceRouting
    public String getInstrument(){
        return  instrument;
    }

    private void setInstrument(String instrument){
        this.instrument=instrument;
    }

    public Money getMinMaxValue(){
        return minMaxValue;
    }

    private void setMinMaxValue(Money minMaxValue){
        this.minMaxValue=minMaxValue;
    }

    public Instant getInsertionTimestamp(){
        return insertionTimestamp;
    }

    private void setInsertionTimestamp(Instant insertionTimestamp){
        this.insertionTimestamp=insertionTimestamp;
    }
    public Side getSide(){
        return side;
    }

    private void setSide(Side side){
        this.side =side;
    }

    public Integer getNoOfItemsToMatch(){
        return noOfItemsToMatch;
    }

    private void setNoOfItemsToMatch(Integer noOfItemsToMatch){
        this.noOfItemsToMatch=noOfItemsToMatch;
    }

    public Boolean getAllItemsMatched(){
        return allItemsMatched;
    }

    private void setAllItemsMatched(Boolean allItemsMatched){
        this.allItemsMatched=allItemsMatched;
    }

    public static Builder builder(){
        return new Builder(false);
    }

    public static Builder templateBuilder(){
        return new Builder(true);
    }
}
